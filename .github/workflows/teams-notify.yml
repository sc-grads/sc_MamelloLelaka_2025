name: Notify Teams on PR Events
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
  pull_request_review:
    types: [submitted]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      # Debugging step to log event details
      - name: Debug event details
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Event Action: ${{ github.event.action }}"
          echo "PR Merged: ${{ github.event.pull_request.merged }}"
          echo "Review State: ${{ github.event.review.state }}"
          echo "Head Ref: ${{ github.head_ref || github.ref_name }}"
          echo "Base Ref: ${{ github.event.pull_request.base.ref }}"

      # 1. Notify when a PR is created, reopened, or updated (but not closed)
      - name: Notify on PR creation/update
        if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize')
        run: |
          curl -X POST \
               -H "Content-Type: application/json" \
               -d "$(
                  jq -c -n \
                    --arg title "${{ github.event.pull_request.user.login }} - New Pull Request 🆕" \
                    --arg pr_title "${{ github.event.pull_request.title }}" \
                    --arg pr_body "${{ github.event.pull_request.body || 'No description provided' }}" \
                    --arg author "${{ github.event.pull_request.user.login }}" \
                    --arg pr_url "${{ github.event.pull_request.html_url }}" \
                    --arg branch "${{ github.head_ref || github.ref_name }}" \
                    --arg target "${{ github.event.pull_request.base.ref }}" \
                    '{
                      "title": $title,
                      "sections": [{
                        "activityTitle": ($author + " - A new pull request is waiting for review! 👀"),
                        "facts": [
                          {"name": "1. 📝 Title:", "value": $pr_title},
                          {"name": "2. 📋 Description:", "value": $pr_body},
                          {"name": "3. 👤 Author:", "value": $author},
                          {"name": "4. 🔗 View PR", "value": $pr_url},
                          {"name": "5. 🌿 Branch:", "value": $branch},
                          {"name": "6. 📥 Target:", "value": $target}
                        ],
                        "markdown": true
                      }],
                      "potentialAction": [
                        {"@type": "OpenUri", "name": "View PR", "targets": [{"os": "default", "uri": $pr_url}]},
                        {"@type": "OpenUri", "name": "View changes", "targets": [{"os": "default", "uri": ($pr_url + "/files")}]}
                      ]
                    }'
               )" \
               ${{ secrets.TEAMS_WEBHOOK_URL }} || echo "Failed to send Teams notification"

      # 2. Notify when a PR review is submitted with an approval
      - name: Notify on PR approval
        if: github.event_name == 'pull_request_review' && github.event.review.state == 'approved'
        run: |
          curl -X POST \
               -H "Content-Type: application/json" \
               -d "$(
                  jq -c -n \
                    --arg title "${{ github.event.pull_request.user.login }} - Pull Request Approved ✅" \
                    --arg pr_title "${{ github.event.pull_request.title }}" \
                    --arg author "${{ github.event.pull_request.user.login }}" \
                    --arg reviewer "${{ github.event.review.user.login }}" \
                    --arg comment "${{ github.event.review.body || 'No comment provided' }}" \
                    --arg pr_url "${{ github.event.pull_request.html_url }}" \
                    --arg branch "${{ github.head_ref || github.ref_name }}" \
                    --arg review_id "${{ github.event.review.id }}" \
                    '{
                      "title": $title,
                      "sections": [{
                        "activityTitle": ($author + " - A pull request has been approved! 👍"),
                        "facts": [
                          {"name": "1. 📝 Title:", "value": $pr_title},
                          {"name": "2. 👤 Author:", "value": $author},
                          {"name": "3. ✨ Approved by:", "value": $reviewer},
                          {"name": "4. 💬 Review comment:", "value": $comment},
                          {"name": "5. 🔗 View PR", "value": $pr_url},
                          {"name": "6. 🌿 Branch:", "value": $branch}
                        ],
                        "markdown": true
                      }],
                      "potentialAction": [
                        {"@type": "OpenUri", "name": "View PR", "targets": [{"os": "default", "uri": $pr_url}]},
                        {"@type": "OpenUri", "name": "View review", "targets": [{"os": "default", "uri": ($pr_url + "#pullrequestreview-" + $review_id)}]}
                      ]
                    }'
               )" \
               ${{ secrets.TEAMS_WEBHOOK_URL }} || echo "Failed to send Teams notification"

      # 3. Notify when a PR is merged (closed and merged)
      - name: Notify on PR merge
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          curl -X POST \
               -H "Content-Type: application/json" \
               -d "$(
                  jq -c -n \
                    --arg title "${{ github.event.pull_request.user.login }} - Pull Request Merged 🎉" \
                    --arg pr_title "${{ github.event.pull_request.title }}" \
                    --arg pr_body "${{ github.event.pull_request.body || 'No description provided' }}" \
                    --arg author "${{ github.event.pull_request.user.login }}" \
                    --arg pr_url "${{ github.event.pull_request.html_url }}" \
                    --arg branch "${{ github.head_ref || github.ref_name }}" \
                    --arg target "${{ github.event.pull_request.base.ref }}" \
                    --arg run_url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
                    '{
                      "title": $title,
                      "sections": [{
                        "activityTitle": ($author + " - A pull request has been merged! 🚀"),
                        "facts": [
                          {"name": "1. 📝 Title:", "value": $pr_title},
                          {"name": "2. 📋 Description:", "value": $pr_body},
                          {"name": "3. 👤 Author:", "value": $author},
                          {"name": "4. 🔗 View PR", "value": $pr_url},
                          {"name": "5. 🌿 Merged Branch:", "value": $branch},
                          {"name": "6. 📥 Merged Into:", "value": $target}
                        ],
                        "markdown": true
                      }],
                      "potentialAction": [
                        {"@type": "OpenUri", "name": "View run", "targets": [{"os": "default", "uri": $run_url}]},
                        {"@type": "OpenUri", "name": "View commit", "targets": [{"os": "default", "uri": $pr_url}]}
                      ]
                    }'
               )" \
               ${{ secrets.TEAMS_WEBHOOK_URL }} || echo "Failed to send Teams notification"
